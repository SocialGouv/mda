strapi:
  host: "strapi-{{ .Values.global.host }}"
#   ~needs: [build-strapi, strapi-import-content]

web:
  vars:
    MAILER_ENABLE: "True"
    MAILER_SMTP_HOST: maildev
    MAILER_SMTP_PORT: "1025"
    MAILER_SMTP_LOGIN: ""
    MAILER_SMTP_PASSWORD: ""
    MAILER_SMTP_SSL: "False"

maildev: {}

jobs:
  runs:
    build-web:
      with:
        buildArgs:
          PRODUCTION: "true"
          NEXT_PUBLIC_STRAPI_API_URL: "https://strapi-{{ .Values.global.host }}"
    create-db:
      use: create-db
    build-strapi:
      ~needs: [create-db]
    # strapi-import-content:
    #   namespace: "{{ .Values.global.namespace }}"
    #   ~needs: [build-strapi]
    #   retry: 0
    #   checkout: false
    #   image: "{{ .Values.global.registry }}/{{ .Values.global.imageProject }}/{{ .Values.global.imageRepository }}/strapi:{{ .Values.global.imageTag }}"
    #   envFrom:
    #     - secretRef:
    #         name: "{{ .Values.global.pgSecretName }}"
    #     - secretRef:
    #         name: "mda-strapi"
    #   vars:
    #     DATABASE_HOST: "$(PGHOST)"
    #     DATABASE_PORT: "$(PGPORT)"
    #     DATABASE_NAME: "$(PGDATABASE)"
    #     DATABASE_USERNAME: "$(PGUSER)"
    #     DATABASE_PASSWORD: "$(PGPASSWORD)"
    #     DATABASE_SSL: "$(PGSSLMODE)" # invetigate why knex doesn't work with "ssl: require"
    #     HOST: "0.0.0.0"
    #     MDA_ENV: "{{ .Values.global.env }}"
    #   shell: sh
    #   user: 1001
    #   run: |
    #     strapi import --only content --force --file content-dump.tar.gz
